openapi: 3.0.2
info:
  description: Web Practice Tech API
  title: Web Practice Tech API
  version: 0.0.1
servers:
  - description: Development server
    url: https://jsonplaceholder.typicode.com
tags:
  - description: 投稿
    name: posts
  - description: ユーザ
    name: users
  - description: 国土交通省外部API
    name: webland
  - description: 郵便番号外部API
    name: zipcloud
paths:
  /posts:
    get:
      description: |-
        hogeに管理された投稿をすべて返却する.
        ドメイン知識どうのこうの、あれこれ、それそれで、使われているので、
        こうこうそれそれなので、このエンドポイントを削除することは、不可能.
      operationId: getPosts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPostsResponseBody'
          description: Successful response
      summary: すべての投稿を返却する
      tags:
        - posts
    post:
      description: N/A
      operationId: createPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequestBody'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePostResponseBody'
          description: Successful response
      summary: 投稿を登録する
      tags:
        - users
  /posts/{postId}:
    delete:
      description: N/A
      operationId: deletePost
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePostResponseBody'
          description: Successful response
      summary: 指定されたIDの投稿を削除する.
      tags:
        - posts
    get:
      description: N/A
      operationId: getPost
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPostResponseBody'
          description: Successful response
      summary: 指定されたIDの投稿を取得する.
      tags:
        - posts
    put:
      description: N/A
      operationId: updatePost
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostRequestBody'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePostResponseBody'
          description: Successful response
      summary: 指定されたIDの投稿を更新する.
      tags:
        - posts
  /posts/{postId}/comments:
    get:
      description: N/A
      operationId: getPostComments
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPostCommentsResponseBody'
          description: Successful response
      summary: 指定されたIDの投稿のコメントを取得する.
      tags:
        - posts
  /users:
    get:
      description: |-
        hogeに管理された投稿をすべて返却する.
        ドメイン知識どうのこうの、あれこれ、それそれで、使われているので、
        こうこうそれそれなので、このエンドポイントを削除することは、不可能.
      operationId: getUsers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponseBody'
          description: Successful response
      summary: すべてのユーザを返却する
      tags:
        - users
    post:
      description: N/A
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestBody'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponseBody'
          description: Successful response
      summary: ユーザを登録する
      tags:
        - users
  /users/{userId}:
    delete:
      description: N/A
      operationId: deleteUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponseBody'
          description: Successful response
      summary: 指定されたIDのユーザを削除する.
      tags:
        - users
    get:
      description: N/A
      operationId: getUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponseBody'
          description: Successful response
      summary: 指定されたIDのユーザを取得する.
      tags:
        - users
    put:
      description: N/A
      operationId: updateUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequestBody'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponseBody'
          description: Successful response
      summary: 指定されたIDのユーザを更新する.
      tags:
        - users
  /users/{userId}/comments:
    get:
      description: N/A
      operationId: getUserComments
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserCommentsResponseBody'
          description: Successful response
      summary: 指定されたIDのユーザのコメントを取得する.
      tags:
        - users
  /webland/api/CitySearch:
    get:
      description: |-
        国土交通省が管理しているAPIから都道府県コードを渡して、
        市区町村を取得する.
        @see: https://www.land.mlit.go.jp/webland/api.html
      operationId: getCityList
      parameters:
        - in: query
          name: area
          required: true
          schema:
            example: '1'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCityListResponseBody'
          description: Successful response
      summary: 都道府県に紐づく市区町村の取得
      tags:
        - webland
  /api/search:
    get:
      description: |-
        https://zipcloud.ibsnet.co.jp/api/search のAPIを使って、
        都道府県と市区町村のデータを取得する
      operationId: getZipcodeOrList
      parameters:
        - in: query
          name: zipcode
          required: true
          schema:
            example: '2610011'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getZipcodeOrList_200_response'
          description: Successful response
      summary: 郵便番号から、都道府県と市区町村を返却する.
      tags:
        - zipcloud
components:
  schemas:
    GetPostsResponseBody:
      items:
        $ref: '#/components/schemas/post'
      type: array
    CreatePostResponseBody:
      items:
        $ref: '#/components/schemas/post'
      type: array
    CreatePostRequestBody:
      example:
        id: 0
        completed: completed
        title: title
        userId: 6
      properties:
        id:
          type: integer
        userId:
          type: integer
        title:
          type: string
        completed:
          type: string
      type: object
    GetPostResponseBody:
      $ref: '#/components/schemas/post'
    post:
      example:
        id: 0
        completed: completed
        title: title
        userId: 6
      properties:
        id:
          type: integer
        userId:
          type: integer
        title:
          type: string
        completed:
          type: string
      required:
        - completed
        - id
        - title
        - userId
      type: object
    UpdatePostResponseBody:
      items:
        $ref: '#/components/schemas/post'
      type: array
    UpdatePostRequestBody:
      example:
        id: 0
        completed: completed
        title: title
        userId: 6
      properties:
        id:
          type: integer
        userId:
          type: integer
        title:
          type: string
        completed:
          type: string
      type: object
    DeletePostResponseBody:
      properties: {}
      type: object
    GetPostCommentsResponseBody:
      items:
        $ref: '#/components/schemas/GetPostCommentsResponseBody_inner'
      type: array
    GetUsersResponseBody:
      items:
        $ref: '#/components/schemas/user'
      type: array
    CreateUserResponseBody:
      items:
        $ref: '#/components/schemas/user'
      type: array
    CreateUserRequestBody:
      example:
        website: website
        address:
          zipcode: zipcode
          geo:
            lon: lon
            lat: lat
          suite: suite
          city: city
          street: street
        phone: phone
        name: name
        company:
          bs: bs
          catchPhrase: catchPhrase
          name: name
        email: email
        username: username
      properties:
        name:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/CreateUserRequestBody_address'
        phone:
          nullable: true
          type: string
        website:
          nullable: true
          type: string
        company:
          $ref: '#/components/schemas/CreateUserRequestBody_company'
      type: object
    GetUserResponseBody:
      $ref: '#/components/schemas/user'
    user:
      example:
        website: website
        address:
          zipcode: zipcode
          geo:
            lon: lon
            lat: lat
          suite: suite
          city: city
          street: street
        phone: phone
        name: name
        company:
          bs: bs
          catchPhrase: catchPhrase
          name: name
        id: 0
        email: email
        username: username
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/user_address'
        phone:
          type: string
        website:
          type: string
        company:
          $ref: '#/components/schemas/user_company'
      required:
        - address
        - email
        - id
        - name
        - username
      type: object
    UpdateUserResponseBody:
      items:
        $ref: '#/components/schemas/user'
      type: array
    UpdateUserRequestBody:
      example:
        website: website
        address:
          zipcode: zipcode
          geo:
            lon: lon
            lat: lat
          suite: suite
          city: city
          street: street
        phone: phone
        name: name
        company:
          bs: bs
          catchPhrase: catchPhrase
          name: name
        email: email
        username: username
      properties:
        name:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/CreateUserRequestBody_address'
        phone:
          nullable: true
          type: string
        website:
          nullable: true
          type: string
        company:
          $ref: '#/components/schemas/CreateUserRequestBody_company'
      type: object
    DeleteUserResponseBody:
      properties: {}
      type: object
    GetUserCommentsResponseBody:
      items:
        $ref: '#/components/schemas/GetPostCommentsResponseBody_inner'
      type: array
    GetCityListResponseBody:
      example:
        data:
          - name: name
            id: id
          - name: name
            id: id
        status: status
      properties:
        status:
          type: string
        data:
          items:
            $ref: '#/components/schemas/GetCityListResponseBody_data_inner'
          type: array
      required:
        - data
        - status
      type: object
    GetZipcodeResponseBody:
      properties: {}
      required:
        - message
        - results
        - status
      type: object
    GetZipcodeListResponseBody:
      properties:
        status:
          type: string
        message:
          nullable: true
          type: string
        results:
          items:
            $ref: '#/components/schemas/zipcode-result'
          type: array
      required:
        - message
        - results
        - status
      type: object
    zipcode-result:
      properties:
        zipcode:
          type: string
        prefcode:
          type: string
        address1:
          type: string
        address2:
          type: string
        address3:
          type: string
        kana1:
          type: string
        kana2:
          type: string
        kana3:
          type: string
      required:
        - address1
        - address2
        - address3
        - kana1
        - kana2
        - kana3
        - prefcode
        - zipcode
      type: object
    getZipcodeOrList_200_response:
      oneOf:
        - $ref: '#/components/schemas/GetZipcodeResponseBody'
        - $ref: '#/components/schemas/GetZipcodeListResponseBody'
    GetPostCommentsResponseBody_inner:
      example:
        name: name
        id: 0
        postId: 6
        body: body
        email: email
      properties:
        id:
          type: integer
        postId:
          type: integer
        name:
          type: string
        email:
          type: string
        body:
          type: string
      required:
        - body
        - email
        - id
        - name
        - postId
      type: object
    CreateUserRequestBody_address_geo:
      example:
        lon: lon
        lat: lat
      properties:
        lat:
          nullable: true
          type: string
        lon:
          nullable: true
          type: string
      type: object
    CreateUserRequestBody_address:
      example:
        zipcode: zipcode
        geo:
          lon: lon
          lat: lat
        suite: suite
        city: city
        street: street
      properties:
        street:
          nullable: true
          type: string
        suite:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        zipcode:
          nullable: true
          type: string
        geo:
          $ref: '#/components/schemas/CreateUserRequestBody_address_geo'
      type: object
    CreateUserRequestBody_company:
      example:
        bs: bs
        catchPhrase: catchPhrase
        name: name
      properties:
        name:
          nullable: true
          type: string
        catchPhrase:
          nullable: true
          type: string
        bs:
          nullable: true
          type: string
      type: object
    user_address_geo:
      example:
        lon: lon
        lat: lat
      properties:
        lat:
          type: string
        lon:
          type: string
      type: object
    user_address:
      example:
        zipcode: zipcode
        geo:
          lon: lon
          lat: lat
        suite: suite
        city: city
        street: street
      properties:
        street:
          type: string
        suite:
          type: string
        city:
          type: string
        zipcode:
          type: string
        geo:
          $ref: '#/components/schemas/user_address_geo'
      type: object
    user_company:
      example:
        bs: bs
        catchPhrase: catchPhrase
        name: name
      properties:
        name:
          type: string
        catchPhrase:
          type: string
        bs:
          type: string
      type: object
    GetCityListResponseBody_data_inner:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
