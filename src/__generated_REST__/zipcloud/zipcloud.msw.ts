/**
 * Generated by orval v6.23.0 🍺
 * Do not edit manually.
 * Web Practice Tech API
 * Web Practice Tech API
 * OpenAPI spec version: 0.0.1
 */
import { faker } from '@faker-js/faker';
import { HttpResponse, delay, http } from 'msw';

export const getGetZipcodeOrListMock = () =>
  faker.helpers.arrayElement([
    {},
    {
      message: faker.helpers.arrayElement([faker.word.sample(), null]),
      results: Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(
        () => ({
          address1: faker.word.sample(),
          address2: faker.word.sample(),
          address3: faker.word.sample(),
          kana1: faker.word.sample(),
          kana2: faker.word.sample(),
          kana3: faker.word.sample(),
          prefcode: faker.word.sample(),
          zipcode: faker.word.sample(),
        }),
      ),
      status: faker.word.sample(),
    },
  ]);

export const getZipcloudMock = () => [
  http.get('*/api/search', async () => {
    await delay(1000);
    return new HttpResponse(JSON.stringify(getGetZipcodeOrListMock()), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
      },
    });
  }),
];
